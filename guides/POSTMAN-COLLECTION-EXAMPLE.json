{
  "info": {
    "name": "VaHire API",
    "description": "Collection for VaHire backend API endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "description": "Authentication related endpoints",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstname\": \"John\",\n  \"lastname\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"securePassword123\",\n  \"role\": \"professional\"\n}"
            },
            "description": "Create a new user account"
          },
          "response": []
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var response = pm.response.json();",
                  "",
                  "if (response.data && response.data.token) {",
                  "    pm.environment.set(\"authToken\", response.data.token);",
                  "    ",
                  "    if (response.data.user && response.data.user.id) {",
                  "        pm.environment.set(\"userId\", response.data.user.id);",
                  "    }",
                  "    ",
                  "    console.log(\"Auth token saved to environment variables\");",
                  "} else {",
                  "    console.error(\"Failed to extract auth token\", response);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"securePassword123\"\n}"
            },
            "description": "Authenticate and get JWT token"
          },
          "response": []
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            },
            "description": "Get authenticated user profile"
          },
          "response": []
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstname\": \"John\",\n  \"lastname\": \"Smith\",\n  \"profile\": {\n    \"title\": \"Senior Full Stack Developer\",\n    \"skills\": [\"JavaScript\", \"React\", \"Node.js\", \"AWS\"],\n    \"experience\": \"7 years in web development\",\n    \"portfolio\": \"https://johnsmith.portfolio.com\"\n  }\n}"
            },
            "description": "Update authenticated user profile"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Projects",
      "description": "Project management endpoints",
      "item": [
        {
          "name": "Get All Projects",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/projects?page=1&limit=10&status=en cours&search=web",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "status",
                  "value": "en cours"
                },
                {
                  "key": "search",
                  "value": "web"
                }
              ]
            },
            "description": "Get all projects with optional filtering"
          },
          "response": []
        },
        {
          "name": "Get Project by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/projects/{{projectId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects", "{{projectId}}"]
            },
            "description": "Get specific project details"
          },
          "response": []
        },
        {
          "name": "Create Project",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var response = pm.response.json();",
                  "if (response.data && response.data.id) {",
                  "    pm.environment.set(\"projectId\", response.data.id);",
                  "    console.log(\"Project ID saved to environment variables:\", response.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/projects",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"E-commerce Website Development\",\n  \"description\": \"Development of a full-featured e-commerce platform with payment integration\",\n  \"budget\": 5000,\n  \"skillsRequired\": [\"JavaScript\", \"React\", \"Node.js\", \"MongoDB\"]\n}"
            },
            "description": "Create a new project (recruiter role required)"
          },
          "response": []
        },
        {
          "name": "Assign Project",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/projects/{{projectId}}/assign",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects", "{{projectId}}", "assign"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"professionalId\": \"{{userId}}\"\n}"
            },
            "description": "Assign a project to a professional"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Payments",
      "description": "Payment processing endpoints",
      "item": [
        {
          "name": "Create Checkout Session",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/payments/checkout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "checkout"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"projectId\": \"{{projectId}}\"\n}"
            },
            "description": "Create a payment checkout session for a project"
          },
          "response": []
        },
        {
          "name": "Get Payment Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/payments/status/{{sessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "status", "{{sessionId}}"]
            },
            "description": "Check status of a payment"
          },
          "response": []
        }
      ]
    },
    {
      "name": "File Uploads",
      "description": "File upload endpoints",
      "item": [
        {
          "name": "Upload Profile Image",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/upload/profile-image",
              "host": ["{{baseUrl}}"],
              "path": ["api", "upload", "profile-image"]
            },
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "image",
                  "type": "file",
                  "src": "/path/to/your/image.jpg"
                }
              ]
            },
            "description": "Upload user profile image"
          },
          "response": []
        },
        {
          "name": "Upload Resume",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/upload/resume",
              "host": ["{{baseUrl}}"],
              "path": ["api", "upload", "resume"]
            },
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "resume",
                  "type": "file",
                  "src": "/path/to/your/resume.pdf"
                }
              ]
            },
            "description": "Upload user resume"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Admin",
      "description": "Admin dashboard endpoints",
      "item": [
        {
          "name": "Get All Users (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users?page=1&limit=20&role=professional&search=john",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "role",
                  "value": "professional"
                },
                {
                  "key": "search",
                  "value": "john"
                }
              ]
            },
            "description": "Get all users with advanced filtering (admin only)"
          },
          "response": []
        },
        {
          "name": "Get System Reports",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/reports",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "reports"]
            },
            "description": "Generate system usage and financial reports (admin only)"
          },
          "response": []
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global pre-request script for the entire collection",
          "console.log('Running VaHire API request:', pm.info.requestName);"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script for the entire collection",
          "if (pm.response.code === 401) {",
          "    console.error('Unauthorized: Auth token may be invalid or expired');",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    }
  ]
} 